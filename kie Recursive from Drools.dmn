<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd"
             xmlns:camunda="http://camunda.org/schema/1.0/dmn"
             id="Recursive"
             name="Recursive"
             namespace="http://camunda.org/schema/1.0/dmn">
  <itemDefinition id="tNumberList" isCollection="true">
    <typeRef>number</typeRef>
  </itemDefinition>
  <decision id="decision_x" name="x">
    <variable id="variable_x" name="x" />
    <context>
      <contextEntry>
        <variable id="variable_f" name="f" />
        <functionDefinition>
          <formalParameter name="n" />
          <formalParameter name="limit" />
          <formalParameter name="list" />
          <context>
            <contextEntry>
              <variable id="variable_newList" name="new list" />
              <literalExpression>
                <text>append(list, n)</text>
              </literalExpression>
            </contextEntry>
            <contextEntry>
              <literalExpression>
                <text>if (n + 1 > limit) then new list else f(n + 1, limit, new list)</text>
              </literalExpression>
            </contextEntry>
          </context>
        </functionDefinition>
      </contextEntry>
      <contextEntry>
        <variable id="variable_g" name="g" />
        <literalExpression>
          <text>function(n, limit, list) { newList : append(list, n), result : if (n + 1 > limit) then newList else g(n + 1, limit, newList) }.result</text>
        </literalExpression>
      </contextEntry>
      <contextEntry>
        <variable id="variable_h" name="h" />
        <functionDefinition>
          <formalParameter name="n" />
          <formalParameter name="limit" />
          <formalParameter name="list" />
          <literalExpression>
            <text>if (n + 1 > limit) then append(list, n) else h(n + 1, limit, append(list, n))</text>
          </literalExpression>
        </functionDefinition>
      </contextEntry>
      <contextEntry>
        <literalExpression>
          <text>[f(1, 3, []), g(1, 3, []), h(1, 3, [])]</text>
        </literalExpression>
      </contextEntry>
    </context>
  </decision>
</definitions>
